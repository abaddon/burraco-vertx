{
  gameEventConsumer {
    topic = "game"
    topic = ${?GAME_EVENT_CONSUMER_TOPIC}
    properties {
      "bootstrap.servers" = "localhost:19092"
      "bootstrap.servers" = ${?KAFKA_BOOTSTRAP_SERVERS}
      "key.deserializer" = "org.apache.kafka.common.serialization.StringDeserializer"
      "key.deserializer" = ${?GAME_EVENT_CONSUMER_KEY_DESERIALIZER}
      "value.deserializer" = "org.apache.kafka.common.serialization.StringDeserializer"
      "value.deserializer" = ${?GAME_EVENT_CONSUMER_VALUE_DESERIALIZER}
      "group.id" = "dealer"
      "group.id" = ${?GAME_EVENT_CONSUMER_GROUP_ID}
      "auto.offset.reset" = "earliest"
      "auto.offset.reset" = ${?GAME_EVENT_CONSUMER_AUTO_OFFSET_RESET}
      "enable.auto.commit" = "true"
      "enable.auto.commit" = ${?GAME_EVENT_CONSUMER_ENABLE_AUTO_COMMIT}
    }
  }

  dealerEventPublisher {
    topic = "dealer"
    topic = ${?DEALER_EVENT_PUBLISHER_TOPIC}
    properties {
      "bootstrap.servers" = "localhost:19092"
      "bootstrap.servers" = ${?KAFKA_BOOTSTRAP_SERVERS}
      "key.serializer" = "org.apache.kafka.common.serialization.StringSerializer"
      "key.serializer" = ${?DEALER_EVENT_PUBLISHER_KEY_SERIALIZER}
      "value.serializer" = "org.apache.kafka.common.serialization.StringSerializer"
      "value.serializer" = ${?DEALER_EVENT_PUBLISHER_VALUE_SERIALIZER}
      "acks" = "-1"
      "acks" = ${?DEALER_EVENT_PUBLISHER_ACKS}
    }
  }

  eventStore {
    streamName = "dealer_stream"
    streamName = ${?EVENT_STORE_DB_STREAM_NAME}
    maxReadPageSize = 100
    maxReadPageSize = ${?EVENT_STORE_DB_MAX_READ_PAGE_SIZE}
    maxWritePageSize = 200
    maxWritePageSize = ${?EVENT_STORE_DB_MAX_WRITE_PAGE_SIZE}
    eventStoreDB {
      connectionString = "kurrentdb://127.0.0.1:2113?tls=false&tlsVerifyCert=false"
      connectionString = ${?EVENT_STORE_DB_CONNECTION_STRING}
    }
  }
}