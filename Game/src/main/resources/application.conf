{
  restHttpService {
    serviceName = "game-service"
    openApiPath = "gameAPIs.yaml"
    http {
      port = 8081
      port = ${?REST_HTTP_PORT}
      address = "0.0.0.0"
      address = ${?REST_HTTP_ADDRESS}
      root = "/"
      root = ${?REST_HTTP_ROOT}
    }
  }

  kafkaDealerConsumer {
    topic = "dealer"
    topic = ${?DEALER_TOPIC}
    properties {
      "bootstrap.servers" = "localhost:19092"
      "bootstrap.servers" = ${?KAFKA_BOOTSTRAP-SERVERS}
      "group.id" = "game-command-dealer"
      "group.id" = ${?KAFKA_DEALER_CONSUMER_GROUP-ID}
      "auto.offset.reset" = "earliest"
      "auto.offset.reset" = ${?KAFKA_DEALER_CONSUMER_AUTO-OFFSET-RESET}
      "enable.auto.commit" = "false"
      "enable.auto.commit" = ${?KAFKA_DEALER_CONSUMER_AUTO-COMMIT}
      "key.deserializer" = "org.apache.kafka.common.serialization.StringDeserializer"
      "key.deserializer" = ${?KAFKA_DEALER_KEY_DESERIALIZER}
      "value.deserializer" = "org.apache.kafka.common.serialization.StringDeserializer"
      "value.deserializer" = ${?KAFKA_DEALER_VALUE_DESERIALIZER}
    }
  }

  kafkaGameProducer {
    topic = "game"
    topic = ${?GAME_TOPIC}
    properties {
      "bootstrap.servers" = "localhost:19092",
      "bootstrap.servers" = ${?KAFKA_BOOTSTRAP-SERVERS}
      "key.serializer" = "org.apache.kafka.common.serialization.StringSerializer"
      "key.serializer" = ${?KAFKA_GAME_KEY_SERIALIZER}
      "value.serializer" = "org.apache.kafka.common.serialization.StringSerializer"
      "value.serializer" = ${?KAFKA_GAME_VALUE_SERIALIZER}
      "acks" = "-1"
    }
  }

  eventStore {
    streamName = "game_stream"
    maxReadPageSize = 100
    maxWritePageSize = 200
    eventStoreDB {
      connectionString = "kurrentdb://127.0.0.1:2113?tls=false&tlsVerifyCert=false"
    }
  }
}